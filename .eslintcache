[{"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\index.js":"1","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\App.js":"2","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\Products.jsx":"3","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\Product\\Product.jsx":"4","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\Product\\styles.js":"5","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\index.js":"6","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Navbar\\Navbar.jsx":"7","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Navbar\\styles.js":"8","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\styles.js":"9","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\lib\\commerce.js":"10","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\Cart.jsx":"11","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\styles.js":"12","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\CartItem\\styles.js":"14","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\CustomTextField.jsx":"19","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":147,"mtime":1606580861000,"results":"21","hashOfConfig":"22"},{"size":2704,"mtime":1606580861000,"results":"23","hashOfConfig":"22"},{"size":688,"mtime":1606580861000,"results":"24","hashOfConfig":"22"},{"size":1248,"mtime":1612296229255,"results":"25","hashOfConfig":"22"},{"size":396,"mtime":1606580861000,"results":"26","hashOfConfig":"22"},{"size":232,"mtime":1606580861000,"results":"27","hashOfConfig":"22"},{"size":2126,"mtime":1606580861000,"results":"28","hashOfConfig":"22"},{"size":1565,"mtime":1606580861000,"results":"29","hashOfConfig":"22"},{"size":287,"mtime":1606580861000,"results":"30","hashOfConfig":"22"},{"size":126,"mtime":1606580861000,"results":"31","hashOfConfig":"22"},{"size":1760,"mtime":1606580861000,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1606580861000,"results":"33","hashOfConfig":"22"},{"size":1400,"mtime":1606580861000,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1606580861000,"results":"35","hashOfConfig":"22"},{"size":3117,"mtime":1606580861000,"results":"36","hashOfConfig":"22"},{"size":1158,"mtime":1606580861000,"results":"37","hashOfConfig":"22"},{"size":4592,"mtime":1606580861000,"results":"38","hashOfConfig":"22"},{"size":2404,"mtime":1606580861000,"results":"39","hashOfConfig":"22"},{"size":533,"mtime":1606580861000,"results":"40","hashOfConfig":"22"},{"size":892,"mtime":1606580861000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dxgg7u",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\index.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\App.js",["87"],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Navbar, Products, Cart, Checkout } from './components';\nimport { commerce } from './lib/commerce';\n\nconst App = () => {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const fetchProducts = async () => {\n    const { data } = await commerce.products.list();\n\n    setProducts(data);\n  };\n\n  const fetchCart = async () => {\n    setCart(await commerce.cart.retrieve());\n  };\n\n  const handleAddToCart = async (productId, quantity) => {\n    const item = await commerce.cart.add(productId, quantity);\n\n    setCart(item.cart);\n  };\n\n  const handleUpdateCartQty = async (lineItemId, quantity) => {\n    const response = await commerce.cart.update(lineItemId, { quantity });\n\n    setCart(response.cart);\n  };\n\n  const handleRemoveFromCart = async (lineItemId) => {\n    const response = await commerce.cart.remove(lineItemId);\n\n    setCart(response.cart);\n  };\n\n  const handleEmptyCart = async () => {\n    const response = await commerce.cart.empty();\n\n    setCart(response.cart);\n  };\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n\n    setCart(newCart);\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n\n      setOrder(incomingOrder);\n\n      refreshCart();\n    } catch (error) {\n      setErrorMessage(error.data.error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n\n  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n\n  return (\n    <Router>\n      <div style={{ display: 'flex' }}>\n        <CssBaseline />\n        <Navbar totalItems={cart.total_items} handleDrawerToggle={handleDrawerToggle} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Products products={products} onAddToCart={handleAddToCart} handleUpdateCartQty />\n          </Route>\n          <Route exact path=\"/cart\">\n            <Cart cart={cart} onUpdateCartQty={handleUpdateCartQty} onRemoveFromCart={handleRemoveFromCart} onEmptyCart={handleEmptyCart} />\n          </Route>\n          <Route path=\"/checkout\" exact>\n            <Checkout cart={cart} order={order} onCaptureCheckout={handleCaptureCheckout} error={errorMessage} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n",["88","89"],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\Products.jsx",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\Product\\Product.jsx",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\Product\\styles.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\index.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Navbar\\Navbar.jsx",["90","91"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport logo from \"../../assets/commerce.png\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport useStyles from './styles'\r\n\r\nconst Navbar = ({totalItems}) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n        <Toolbar>\r\n          <Typography component={Link} to=\"/\" varient=\"h6\" className={classes.title} color=\"inherit\">\r\n            <img src={logo} alt=\"E-Shopping\" height=\"25px\" className={classes.image} />\r\n            E-Shopping\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          {location.pathname === '/' && (\r\n          <div className={classes.button}>\r\n            <IconButton component={Link} to=\"/cart\" aria-label=\"Show Cart Items\" color=\"inherit\">\r\n              <Badge badgeContent={totalItems} color=\"secondary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n          </div> )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Navbar\\styles.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Products\\styles.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\lib\\commerce.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\Cart.jsx",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\styles.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\Cart\\CartItem\\styles.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["92"],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { commerce } from '../../../lib/commerce';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\nimport useStyles from './styles';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n          setCheckoutToken(token);\n        } catch {\n          if (activeStep !== steps.length) history.push('/');\n        }\n      };\n\n      generateToken();\n    }\n  }, [cart]);\n\n  const test = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  let Confirmation = () => (order.customer ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n        <Divider className={classes.divider} />\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br />\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n    </>\n  ) : (\n    <div className={classes.spinner}>\n      <CircularProgress />\n    </div>\n  ));\n\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n      </>\n    );\n  }\n\n  const Form = () => (activeStep === 0\n    ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\n    : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} />);\n\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;\n","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\AddressForm.jsx",["93","94"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"Z:\\Destinix\\Siva\\React Tutorials\\e-shopping\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"95","severity":1,"message":"96","line":4,"column":50,"nodeType":"97","messageId":"98","endLine":4,"endColumn":54},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":2,"column":46,"nodeType":"97","messageId":"98","endLine":2,"endColumn":54},{"ruleId":"95","severity":1,"message":"104","line":2,"column":56,"nodeType":"97","messageId":"98","endLine":2,"endColumn":60},{"ruleId":"105","severity":1,"message":"106","line":36,"column":6,"nodeType":"107","endLine":36,"endColumn":12,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":41,"column":6,"nodeType":"107","endLine":41,"endColumn":8,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":49,"column":6,"nodeType":"107","endLine":49,"endColumn":27,"suggestions":"112"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'MenuItem' is defined but never used.","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"124","text":"125"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"126","text":"127"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"128","text":"129"},[1308,1314],"[activeStep, cart, history]",[1708,1710],"[checkoutToken.id]",[1961,1982],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]